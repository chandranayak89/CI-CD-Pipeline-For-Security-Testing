# Zero-Trust CI/CD Policy
# This policy defines the requirements for zero-trust deployments

version: "1.0"
name: "Zero-Trust Deployment Policy"
description: "Security policy enforcing zero-trust principles throughout the CI/CD pipeline"

# Identity verification requirements
identity_verification:
  # CI/CD runner identity verification
  runner_verification:
    enabled: true
    require_oidc_token: true
    require_signing_key_verification: true
    restricted_runner_labels:
      - "trusted-runner"
      - "security-verified"
    
  # User identity verification
  user_verification:
    enabled: true
    require_mfa: true
    max_auth_age_minutes: 30
    prohibited_locations:
      - "Restricted countries list defined in allowed_regions.json"
    role_requirements:
      production:
        required_roles:
          - "DeploymentAdmin"
          - "SecurityOperator"
        required_approvals: 2
      staging:
        required_roles:
          - "DeploymentOperator"
        required_approvals: 1
  
  # Pipeline integrity verification
  pipeline_verification:
    enabled: true
    verify_workflow_hash: true
    tamper_detection: true
    prohibited_workflow_changes_without_approval:
      - "permissions"
      - "environment"
      - "secrets"

# Artifact verification requirements
artifact_verification:
  # Source code verification
  source_verification:
    enabled: true
    require_signed_commits: true
    branch_protection:
      required: true
      required_signatures: true
      required_status_checks: true
    protected_branches:
      - "main"
      - "master"
      - "release/*"
  
  # Build artifact verification
  build_verification:
    enabled: true
    require_signatures: true
    require_provenance: true
    allowed_builders:
      - "github-actions"
      - "trusted-builder-1"
      - "trusted-builder-2"
    prohibited_builders:
      - "untrusted-builder"
    signature_verification:
      key_sources:
        - "sigstore-community"
        - "organization-keystore"
        - "/keys/trusted-keys.pem"
  
  # Container verification
  container_verification:
    enabled: true
    require_signatures: true
    require_sbom: true
    base_image_requirements:
      allowed_repositories:
        - "registry.internal.example.com/approved-base-images"
        - "gcr.io/distroless/"
      prohibited_repositories:
        - "docker.io/library/node" # Use specific versions only
        - "public.ecr.aws/lambda/python" # Use specific versions only
      max_base_image_age_days: 90
      require_vulnerability_scan: true
    security_context:
      require_non_root: true
      require_readonly_fs: true
      prohibit_privileged: true

# Runtime verification requirements
runtime_verification:
  # Infrastructure verification
  infrastructure_verification:
    enabled: true
    require_iac_templates: true
    iac_template_verification: true
    prohibit_manual_infrastructure_changes: true
    require_drift_detection: true
    restricted_infrastructure_permissions:
      staging:
        - "create-network-resources"
        - "modify-security-groups"
      production:
        - "create-network-resources" # Only with approval
  
  # Environment verification
  environment_verification:
    enabled: true
    require_environment_isolation: true
    network_requirements:
      require_network_policies: true
      default_deny: true
      egress_restrictions: true
    security_posture_verification:
      standard:
        required_checks:
          - "basic-network-security"
          - "rbac-verification"
      high:
        required_checks:
          - "standard-level-checks"
          - "pod-security-standard"
          - "network-policy-enforcement"
      maximum:
        required_checks:
          - "high-level-checks"
          - "secrets-encryption"
          - "etcd-encryption"
          - "control-plane-hardening"
  
  # Deployment verification
  deployment_verification:
    enabled: true
    credential_requirements:
      use_temporary_credentials: true
      max_credential_lifetime_minutes: 30
      require_least_privilege: true
    deployment_monitoring:
      enabled: true
      security_anomaly_detection: true
      detect_unauthorized_changes: true
    verification_stages:
      pre_deployment:
        required: true
        timeout_seconds: 300
      in_deployment:
        required: true
        interval_seconds: 30
      post_deployment:
        required: true
        duration_minutes: 15

# Attestation requirements
attestation_requirements:
  enabled: true
  required_attestations:
    - "deployment-metadata"
    - "sbom"
    - "security-verification"
  storage:
    retention_days: 365
    immutable: true
    require_encryption: true
  verification:
    require_signature_verification: true
    require_timestamp_verification: true

# Audit and monitoring requirements
audit_requirements:
  enabled: true
  audit_log_retention_days: 365
  required_audit_events:
    - "identity-verification"
    - "artifact-verification"
    - "environment-verification"
    - "deployment-execution"
    - "access-control-changes"
    - "credential-issuance"
  notification_events:
    security_critical:
      - "verification-failure"
      - "unauthorized-access-attempt"
      - "policy-violation"
    standard:
      - "deployment-start"
      - "deployment-complete"
      - "verification-success"
  
# Failure handling
failure_handling:
  verification_failure:
    block_deployment: true
    notify_security_team: true
    log_detailed_reason: true
    auto_remediation: false
  
  access_control_failure:
    block_deployment: true
    notify_security_team: true
    lock_environment: true
    require_manual_intervention: true
  
  runtime_verification_failure:
    automatic_rollback: true
    isolate_failing_components: true
    preserve_evidence: true
    notify_security_team: true 