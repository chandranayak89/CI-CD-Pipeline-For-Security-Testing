name: Container Security Scanning

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements.txt'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements.txt'
  schedule:
    - cron: '0 0 * * 2'  # Run weekly on Tuesdays at midnight
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-and-scan:
    name: Build and Scan Container Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Set up Docker Buildx for building images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # Build the Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: security-testing-pipeline:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Scan container for vulnerabilities using Trivy
      - name: Scan container image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: security-testing-pipeline:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          timeout: '10m'
      
      # Upload Trivy scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      
      # Generate human-readable HTML report
      - name: Generate HTML vulnerability report
        run: |
          mkdir -p container-scan-reports
          trivy image --format template --template "@.github/templates/html.tpl" -o container-scan-reports/index.html security-testing-pipeline:latest
        continue-on-error: true
      
      # Archive scan results as artifacts
      - name: Archive container scan results
        uses: actions/upload-artifact@v3
        with:
          name: container-scan-results
          path: |
            trivy-results.sarif
            container-scan-reports/
      
      # Deploy the report to GitHub Pages
      - name: Deploy Container Scan Report to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: container-scan-reports
          branch: gh-pages
          target-folder: container-scan-reports 